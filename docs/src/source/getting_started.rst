
Getting started
===============

Deviser allows a user to define an SBML Level 3 ("L3" for short) package 
and produce libSBML
code that can be integrated with the existing libSBML source tree to add
libSBML support for the package.

Deviser can also use the package description to create basic
specification files for the package based on the LaTeX style sbmlpkgspec
for SBML Level 3 package documentation.

The creation of both code and TeX files can be controlled via a
command-line interface.

Deviser Edit is an editor tool that provides a graphical user interface (GUI) 
for defining the
necessary details of the package being defined. The GUI also provides a 
convenient way of invoking the
Deviser functionality to create code or TeX files. Additional functionality 
is also provides by Deviser Edit (view UML,
create PDF, integrate and test code) to aid the process of defining an 
SBML L3 package and testing the code generated by Deviser.

Functionality
-------------

The Deviser Edit tool outputs an XML definition of the SBML L3 package. This
definition is then used by Deviser to generate either code or TeX files.
Samples of definitions output by Deviser Edit are included in the samples 
directory within the Deviser distribution and the full text of the XML definition 
created by
the examples used in this manual is given in Appendix A. Note it is not 
necessary to use Deviser Edit to produce this XML definition; the 
definition can be produced by hand but should match the format used
in the samples provided.

Using command line
~~~~~~~~~~~~~~~~~~

A command line interface is available to produce code files and TeX files.
This uses the deviser.py function that is available in the generator 
directory of the Deviser distribution.


This is invoked as::

      deviser.py [--generate][--latex] input-file.xml

This program takes as input a Deviser XML file and performs the 
following actions depending on the command-line arguments given::

	  --generate (-g) generates the libSBML code for the package

	  --latex (-l) generates a LaTeX scaffold for its specification.


Using Deviser Edit
~~~~~~~~~~~~~~~~~~

The basic Deviser Edit tool allows a user
to define an SBML L3 package by filling in requested information. 
Once defined the following functions are
available:

1. Generate the necessary libSBML code for the package.

2. Integrate and test the package with libSBML.

3. Generate TeX files for basic specification of the package.

4. Generate a PDF of a basic specification document for the package.

5. Create and view a UML diagram.

Prerequisites
-------------

The main functionality (generating code or TeX files) is
invoked using a Python Interpreter. This release of Deviser has been 
tested with Python 2.7, 3.3 and 3.4. Other functions may require further
software. The prerequisites for each function are listed below:


Integration and testing
~~~~~~~~~~~~~~~~~~~~~~~

Deviser Edit does allow you to automatically integrate and test your
newly created code with libSBML. In order to do this you will need to
have the following additional software available:

-  CMake

-  SWIG 

-  a C++ compiler

-  libSBML source code

-  libSBML dependencies source code

Basic documentation
~~~~~~~~~~~~~~~~~~~

In order to create a PDF it will be necessary to have the following:

-  pdflatex

-  sbmlpkgspec (the LaTeX style for SBML L3 package documentation )

On Windows we successfully used MiKTEX.

On a standard Linux OS we found it necessary to install the
following packages:

-  xzdec

-  texlive-latex-base

-  texlive-latex-extra

-  texlive-fonts-extra

and run the following from the command line

-  tlmgr init-usertree

-  tlmgr install bbding

-  tlmgr install fourier

.. todo::
    Add anything Mac specific

UML diagrams
~~~~~~~~~~~~

Deviser allows you to create and view very basic UML diagrams based on
the classes specified. It uses the free yUML (http://yuml.me/) web
service. Thus it will be necessary to be connected to the internet to
create UML diagrams.

Available bundles
~~~~~~~~~~~~~~~~~

.. todo::
    What are we releasing this time ?

Useful links
~~~~~~~~~~~~

1. libSBML source code (latest release):
   https://sourceforge.net/projects/sbml/files/libsbml/5.12.0/stable/libSBML-5.11.4-core-src.tar.gz/download

2. libSBML source code (latest code):
   https://sourceforge.net/p/sbml/code/HEAD/tree/trunk/libsbml/

3. libSBML dependencies:
   https://github.com/sbmlteam/libSBML-dependencies

4. SBML package specification LaTeX template files:
   https://sourceforge.net/projects/sbml/files/specifications/tex/sbmlpkgspec-1.6.0.tar.gz/download

5. CMake:
   http://www.cmake.org/

6. SWIG:
   http://www.swig.org/

7. MiKTEX:
   http://miktex.org/

Setting up the Deviser Edit tool
--------------------------------

.. todo::
   Document new tabs


In order to access the functionality for generation it is necessary to
tell the Deviser Edit tool where it will find things on your system.

Select Edit->Edit Preferences (Preferences on Mac OSX)

.. _fig-preferences:
.. figure:: ../screenshots/deviser-preferences.png

    The ‘Preferences’ sheet; adding information about other required software.
   

Fill in or browse to the location of the files requested by each field.
Note it is not necessary to fill in all the fields if you do not
intend to use all the functionality. Figure :num:`fig-preferences` illustrates 
a case
where you want to generate code and TeX files but do not want to generate a 
PDF or
integrate the code automatically.

Without any of this information the Deviser Edit tool will save the XML
description and create UML diagrams.

.. todo::
    Change MikTeX mention

The fields requested are:

- **Python Interpreter**. 
  This is the location of the python executable. This is necessary to 
  invoke any functionality of Deviser.


- **Deviser repository**. 
  This is the location of the 'deviser' directory containing the scripts used 
  to generate code/LaTeX. This will have 
  been bundled with an installer but may also be obtained directly from our 
  GitHub repository [https://github.com/sbmlteam/deviser].


- **Default output dir**. 
  The location where generated files should be written.


- **sbmlpkgspec dir**. 
  The location of the SBML documentation style files sbmlpkgspec.


- **MikTeX Bin dir**. 
  The location of the MikTex executables.


- **Compiler**.
  The location of the C++ compiler to be used when building libSBML with 
  integrated package code.


- **libSBML Source dir**. 
  The location of the libSBML source tree. This should be the top-level 
  libSBML directory.


- **Dependencies Source dir**. 
  The location of the libSBML dependencies source code. Note that 
  particularly on Windows it is necessary for the
  libSBML dependencies to be built with the same compiler as that to be
  used to build libSBML. Deviser Edit allows a user to specify the
  location of the source code for the dependencies and offers an option to
  build them if this should be necessary.


- **CMake executable**. 
  The location of the CMake executable. Deviser creates the necessary CMake 
  files to allow package code to be integrated. This will be necessary if 
  you intend to use Deviser Edit to integrate and build your code. 
  Note Deviser does not support any other build system.

- **SWIG executable**. 
  The location of the SWIG executable. Since Deviser
  uses a python interpreter to create code, the integration and testing
  will create the Python binding of libSBML. SWIG is necessary for this.

- **Python include dir**. 
  The location of the python include files. This
  is necessary to build and test the Python binding of libSBML.

- **Python lib**. 
  The location of the Python library files. This is
  necessary to build and test the Python binding of libSBML.
